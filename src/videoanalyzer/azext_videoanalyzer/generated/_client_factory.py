# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


def cf_videoanalyzer_cl(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from azext_videoanalyzer.vendored_sdks.videoanalyzer import VideoAnalyzer
    return get_mgmt_service_client(cli_ctx,
                                   VideoAnalyzer)


def cf_edgemodule(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).edgemodules


def cf_pipelinetopology(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).pipelinetopologies


def cf_livepipeline(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).livepipelines


def cf_pipelinejob(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).pipelinejobs


def cf_livepipelineoperationstatuses(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).livepipelineoperationstatuses


def cf_pipelinejoboperationstatuses(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).pipelinejoboperationstatuses


def cf_videoanalyzer(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).videoanalyzers


def cf_privatelinkresource(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).privatelinkresources


def cf_privateendpointconnection(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).privateendpointconnections


def cf_operationstatuses(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).operationstatuses


def cf_operationresult(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).operationresults


def cf_videoanalyzeroperationstatuses(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).videoanalyzeroperationstatuses


def cf_videoanalyzeroperationresult(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).videoanalyzeroperationresults


def cf_video(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).videos


def cf_accesspolicy(cli_ctx, *_):
    return cf_videoanalyzer_cl(cli_ctx).accesspolicies
