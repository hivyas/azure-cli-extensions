# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /AccessPolicies/put/Register access policy entity.
@try_manual
def step_accesspolicy_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer accesspolicy create '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--jwtauthentication audiences="audience1" claims={{"name":"claimname1","value":"claimvalue1"}} '
             'claims={{"name":"claimname2","value":"claimvalue2"}} issuers="issuer1" issuers="issuer2" '
             'keys={{"@type":"#Microsoft.VideoAnalyzer.RsaTokenKey","alg":"RS256","e":"ZLFzZTY0IQ '
             'keys={{"@type":"#Microsoft.VideoAnalyzer.EccTokenKey","alg":"ES256","kid":"124","x":"XX '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/Gets an access policy entity.
@try_manual
def step_accesspolicy_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer accesspolicy show '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/get/Lists access policy entities.
@try_manual
def step_accesspolicy_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer accesspolicy list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/patch/Update access policy entity.
@try_manual
def step_accesspolicy_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer accesspolicy update '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--jwtauthentication audiences="audience1" claims={{"name":"claimname1","value":"claimvalue1"}} '
             'claims={{"name":"claimname2","value":"claimvalue2"}} issuers="issuer1" issuers="issuer2" '
             'keys={{"@type":"#Microsoft.VideoAnalyzer.RsaTokenKey","alg":"RS256","e":"ZLFzZTY0IQ '
             'keys={{"@type":"#Microsoft.VideoAnalyzer.EccTokenKey","alg":"ES256","kid":"124","x":"XX '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /AccessPolicies/delete/Deletes an access policy entity.
@try_manual
def step_accesspolicy_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer accesspolicy delete -y '
             '--name "{myAccessPolicy}" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EdgeModules/put/Registers an edge module.
@try_manual
def step_edgemodule_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edgemodule create '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EdgeModules/get/Gets edge module registration.
@try_manual
def step_edgemodule_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edgemodule show '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EdgeModules/get/Lists the registered edge modules.
@try_manual
def step_edgemodule_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edgemodule list '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EdgeModules/post/Generate the Provisioning token for an edge module registration.
@try_manual
def step_edgemodule_list_provisioning_token(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edgemodule list-provisioning-token '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--expiration-date "2023-01-23T11:04:49.0526841-08:00" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /EdgeModules/delete/Deletes an edge module registration.
@try_manual
def step_edgemodule_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer edgemodule delete -y '
             '--account-name "testaccount2" '
             '--name "{myEdgeModule}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/put/Create or update a live pipeline
@try_manual
def step_livepipeline_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline create '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--description "Live Pipeline 1 Description" '
             '--bitrate-kbps 500 '
             '--parameters name="rtspUrlParameter" value="rtsp://contoso.com/stream" '
             '--topology-name "pipelinetopology1" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/get/List live pipelines
@try_manual
def step_livepipeline_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/get/Retrieves a specific live pipeline by name
@try_manual
def step_livepipeline_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline show '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/patch/Updates a live pipeline.
@try_manual
def step_livepipeline_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline update '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--description "Live Pipeline 1 Description" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/post/Activate live pipeline
@try_manual
def step_livepipeline_activate(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline activate '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/post/Deactivate Live pipeline
@try_manual
def step_livepipeline_deactivate(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline deactivate '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelineOperationStatuses/get/Get the live pipeline operation status.
@try_manual
def step_livepipelineoperationstatuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipelineoperationstatuses show '
             '--operation-id "00000000-0000-0000-0000-000000000001" '
             '--account-name "testaccount2" '
             '--live-pipeline-name "{myLivePipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /LivePipelines/delete/Delete a live pipeline
@try_manual
def step_livepipeline_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer livepipeline delete -y '
             '--account-name "testaccount2" '
             '--name "{myLivePipeline}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /OperationResults/get/Get status of private endpoint connection asynchronous operation.
@try_manual
def step_operationresult_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer operationresult show '
             '--name "6FBA62C4-99B5-4FF8-9826-FC4744A8864F" '
             '--operation-id "10000000-0000-0000-0000-000000000000" '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /OperationStatuses/get/Get status of private endpoint asynchronous operation when it is completed.
@try_manual
def step_operationstatuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer operationstatuses show '
             '--name "D612C429-2526-49D5-961B-885AE11406FD" '
             '--operation-id "CDE44A33-DD32-4FFA-A1BC-601DC4D52B03" '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/put/Create or update a pipeline job
@try_manual
def step_pipelinejob_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob create '
             '--account-name "testaccount2" '
             '--description "Pipeline Job 1 Dsecription" '
             '--parameters name="timesequences" value="[[\\"2020-10-05T03:30:00Z\\", \\"2020-10-05T04:30:00Z\\"]]" '
             '--parameters name="videoSourceName" value="camera001" '
             '--topology-name "pipelinetopology1" '
             '--name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/get/Get a pipeline job by name
@try_manual
def step_pipelinejob_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob show '
             '--account-name "testaccount2" '
             '--name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/get/List all pipeline jobs
@try_manual
def step_pipelinejob_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/patch/Updates a pipeline job
@try_manual
def step_pipelinejob_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob update '
             '--account-name "testaccount2" '
             '--description "Pipeline Job 1 description" '
             '--name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/post/Cancels a pipeline job
@try_manual
def step_pipelinejob_cancel(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob cancel '
             '--account-name "testaccount2" '
             '--name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobOperationStatuses/get/Get the pipeline job operation status.
@try_manual
def step_pipelinejoboperationstatuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejoboperationstatuses show '
             '--operation-id "00000000-0000-0000-0000-000000000001" '
             '--account-name "testaccount2" '
             '--pipeline-job-name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineJobs/delete/Deletes a pipeline job
@try_manual
def step_pipelinejob_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinejob delete -y '
             '--account-name "testaccount2" '
             '--name "{myPipelineJob}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineTopologies/put/Create or update a pipeline topology with an Rtsp source and video sink.
@try_manual
def step_pipelinetopology_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinetopology create '
             '--account-name "testaccount2" '
             '--kind "Live" '
             '--description "Pipeline Topology 1 Description" '
             '--parameters name="rtspUrlParameter" type="String" description="rtsp source url parameter" '
             'default="rtsp://microsoft.com/video.mp4" '
             '--parameters name="rtspPasswordParameter" type="SecretString" description="rtsp source password '
             'parameter" default="password" '
             '--sinks "[{{\\"name\\":\\"videoSink\\",\\"@type\\":\\"#Microsoft.VideoAnalyzer.VideoSink\\",\\"inputs\\":'
             '[{{\\"nodeName\\":\\"rtspSource\\"}}],\\"videoCreationProperties\\":{{\\"description\\":\\"Parking lot so'
             'uth entrance\\",\\"segmentLength\\":\\"PT30S\\",\\"title\\":\\"Parking Lot (Camera 1)\\"}},\\"videoName\\'
             '":\\"camera001\\",\\"videoPublishingOptions\\":{{\\"disableArchive\\":\\"false\\",\\"disableRtspPublishin'
             'g\\":\\"true\\"}}}}]" '
             '--sources name="rtspSource" type="#Microsoft.VideoAnalyzer.RtspSource" endpoint={{"@type":"#Microsoft.Vid'
             'eoAnalyzer.UnsecuredEndpoint","credentials":{{"@type":"#Microsoft.VideoAnalyzer.UsernamePasswordCredentia'
             'ls","password":"${{rtspPasswordParameter}}","username":"username"}},"url":"${{rtspUrlParameter}}"}} '
             'transport="Http" '
             '--name "Live_S1" '
             '--pipeline-topology-name "{myPipelineTopology}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineTopologies/get/Get a pipeline topology by name
@try_manual
def step_pipelinetopology_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinetopology show '
             '--account-name "testaccount2" '
             '--name "{myPipelineTopology}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineTopologies/get/List all pipeline topologies
@try_manual
def step_pipelinetopology_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinetopology list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineTopologies/patch/Update pipeline topology.
@try_manual
def step_pipelinetopology_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinetopology update '
             '--account-name "testaccount2" '
             '--description "Pipeline Topology 1 Description" '
             '--pipeline-topology-name "{myPipelineTopology}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PipelineTopologies/delete/Delete a pipeline topology
@try_manual
def step_pipelinetopology_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer pipelinetopology delete -y '
             '--account-name "testaccount2" '
             '--name "{myPipelineTopology}" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/put/Update private endpoint connection.
@try_manual
def step_privateendpointconnection_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privateendpointconnection create '
             '--name "10000000-0000-0000-0000-000000000000" '
             '--account-name "contososports" '
             '--private-link-service-connection-state description="Test description." status="Approved" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/get/Get all private endpoint connections.
@try_manual
def step_privateendpointconnection_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privateendpointconnection list '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/get/Get private endpoint connection.
@try_manual
def step_privateendpointconnection_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privateendpointconnection show '
             '--name "10000000-0000-0000-0000-000000000000" '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PrivateEndpointConnections/delete/Delete private endpoint connection.
@try_manual
def step_privateendpointconnection_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privateendpointconnection delete -y '
             '--name "connectionName1" '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PrivateLinkResources/get/Get details of a group ID.
@try_manual
def step_privatelinkresource_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privatelinkresource show '
             '--name "integration" '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /PrivateLinkResources/get/Get list of all group IDs.
@try_manual
def step_privatelinkresource_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer privatelinkresource list '
             '--account-name "contososports" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzerOperationResults/get/Get status of asynchronous operation.
@try_manual
def step_videoanalyzeroperationresult_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer videoanalyzeroperationresult show '
             '--operation-id "6FBA62C4-99B5-4FF8-9826-FC4744A8864F" '
             '--location-name "westus"',
             checks=checks)


# EXAMPLE: /VideoAnalyzerOperationStatuses/get/Get status of asynchronous operation when it is completed with error.
@try_manual
def step_videoanalyzeroperationstatuses_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer videoanalyzeroperationstatuses show '
             '--operation-id "D612C429-2526-49D5-961B-885AE11406FD" '
             '--location-name "westus"',
             checks=checks)


# EXAMPLE: /VideoAnalyzerOperationStatuses/get/Get status of asynchronous operation when it is completed.
@try_manual
def step_videoanalyzeroperationstatuses_show2(test, checks=None):
    return step_videoanalyzeroperationstatuses_show(test, checks)


# EXAMPLE: /VideoAnalyzerOperationStatuses/get/Get status of asynchronous operation when it is ongoing.
@try_manual
def step_videoanalyzeroperationstatuses_show3(test, checks=None):
    return step_videoanalyzeroperationstatuses_show(test, checks)


# EXAMPLE: /VideoAnalyzers/put/Create a Video Analyzer account
@try_manual
def step_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer create '
             '--account-name "contosotv" '
             '--video-analyzer-identity-type "UserAssigned" '
             '--user-assigned-identities "{{\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/pr'
             'oviders/Microsoft.ManagedIdentity/userAssignedIdentities/id1\\":{{}},\\"/subscriptions/00000000-0000-0000'
             '-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id2\\":{{'
             '}},\\"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.ManagedId'
             'entity/userAssignedIdentities/id3\\":{{}}}}" '
             '--location "South Central US" '
             '--type "SystemKey" '
             '--iot-hubs id="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Devices/IotHubs'
             '/hub1" user-assigned-identity="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft'
             '.ManagedIdentity/userAssignedIdentities/id3" '
             '--iot-hubs id="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Devices/IotHubs'
             '/hub2" user-assigned-identity="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft'
             '.ManagedIdentity/userAssignedIdentities/id3" '
             '--storage-accounts id="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.Storage'
             '/storageAccounts/{sa}" user-assigned-identity="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/pro'
             'viders/Microsoft.ManagedIdentity/userAssignedIdentities/id2" '
             '--tags tag1="value1" tag2="value2" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/Get a Video Analyzer account by name
@try_manual
def step_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer show '
             '--account-name "contosotv" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/List all Video Analyzer accounts
@try_manual
def step_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer list '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/get/List all Video Analyzer accounts in the specified subscription
@try_manual
def step_list2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer list '
             '-g ""',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/patch/Update a Video Analyzer accounts
@try_manual
def step_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer update '
             '--account-name "contosotv" '
             '--tags key1="value3" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /VideoAnalyzers/delete/Delete a Video Analyzer account
@try_manual
def step_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer delete -y '
             '--account-name "contosotv" '
             '--resource-group "{rg_2}"',
             checks=checks)


# EXAMPLE: /Videos/put/Register video entity.
@try_manual
def step_video_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video create '
             '--account-name "testaccount2" '
             '--description "Sample Description 1" '
             '--title "Sample Title 1" '
             '--resource-group "{rg}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/get/Gets a video entity.
@try_manual
def step_video_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video show '
             '--account-name "testaccount2" '
             '--resource-group "{rg}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/get/Lists video entities.
@try_manual
def step_video_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video list '
             '--top "2" '
             '--account-name "testaccount2" '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /Videos/patch/Update video entity.
@try_manual
def step_video_update(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video update '
             '--account-name "testaccount2" '
             '--description "Parking Lot East Entrance" '
             '--resource-group "{rg}" '
             '--name "{myVideo}"',
             checks=checks)


# EXAMPLE: /Videos/post/Generate a content token for media endpoint authorization.
@try_manual
def step_video_list_content_token(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video list-content-token '
             '--account-name "testaccount2" '
             '--resource-group "{rg}" '
             '--name "{myVideo2}"',
             checks=checks)


# EXAMPLE: /Videos/delete/Deletes a video entity.
@try_manual
def step_video_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az videoanalyzer video delete -y '
             '--account-name "testaccount2" '
             '--resource-group "{rg}" '
             '--name "{myVideo}"',
             checks=checks)
